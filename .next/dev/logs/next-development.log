[00:00:02.112] Server  LOG      ✓ Ready in 1375ms
[00:00:05.196] Server  LOG      ○ Compiling / ...
[00:00:06.960] Server  ERROR    ⨯ ./src/Components/About/About.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/About/About.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/About/About.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]



./src/Components/Certificate/Certificate.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Certificate/Certificate.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Certificate/Certificate.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]



./src/Components/Contact/Contact.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Contact/Contact.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Contact/Contact.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]



./src/Components/Counter/Counter.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Counter/Counter.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Counter/Counter.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]



./src/Components/Counter/Increment.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Counter/Increment.jsx [Client Component Browser]
    ./src/Components/Counter/Counter.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Counter/Increment.jsx [Client Component SSR]
    ./src/Components/Counter/Counter.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]



./src/Components/Education/Education.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Education/Education.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Education/Education.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]



./src/Components/Footer/Footer.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import trace:
  Server Component:
    ./src/Components/Footer/Footer.jsx
    ./src/app/layout.js



./src/Components/Header/Header.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import trace:
  Server Component:
    ./src/Components/Header/Header.jsx
    ./src/app/layout.js



./src/Components/Hero/Hero.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Hero/Hero.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Hero/Hero.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]



./src/Components/Services/Services.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Services/Services.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Services/Services.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]



./src/Components/Work/Work.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Work/Work.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Work/Work.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]



./src/Components/context/ThemeToggle.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/context/ThemeToggle.jsx [Client Component Browser]
    ./src/Components/Header/Header.jsx [Client Component Browser]
    ./src/Components/Header/Header.jsx [Server Component]
    ./src/app/layout.js [Server Component]

  Client Component SSR:
    ./src/Components/context/ThemeToggle.jsx [Client Component SSR]
    ./src/Components/Header/Header.jsx [Client Component SSR]
    ./src/Components/Header/Header.jsx [Server Component]
    ./src/app/layout.js [Server Component]



./src/Components/hooks/useLenis.js
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/hooks/useLenis.js [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/hooks/useLenis.js [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]



./src/Components/variants.js
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/variants.js [Client Component Browser]
    ./src/Components/Counter/Counter.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/variants.js [Client Component SSR]
    ./src/Components/Counter/Counter.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]



./src/app/context/ThemeContext.js
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Server Component:
    ./src/app/context/ThemeContext.js
    ./src/app/layout.js

  Client Component Browser:
    ./src/app/context/ThemeContext.js [Client Component Browser]
    ./src/Components/Counter/Counter.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/app/context/ThemeContext.js [Client Component SSR]
    ./src/Components/Counter/Counter.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]



./src/app/layout.js
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.



./src/app/page.js
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]


[00:00:08.970] Browser ERROR   uncaughtError: Error: ./src/Components/About/About.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/About/About.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/About/About.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]


[00:00:09.866] Browser ERROR   ./src/Components/About/About.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/About/About.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/About/About.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.866] Browser ERROR   ./src/Components/Certificate/Certificate.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Certificate/Certificate.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Certificate/Certificate.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.866] Browser ERROR   ./src/Components/Contact/Contact.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Contact/Contact.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Contact/Contact.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.866] Browser ERROR   ./src/Components/Counter/Counter.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Counter/Counter.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Counter/Counter.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.866] Browser ERROR   ./src/Components/Counter/Increment.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Counter/Increment.jsx [Client Component Browser]
    ./src/Components/Counter/Counter.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Counter/Increment.jsx [Client Component SSR]
    ./src/Components/Counter/Counter.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.866] Browser ERROR   ./src/Components/Education/Education.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Education/Education.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Education/Education.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.866] Browser ERROR   ./src/Components/Footer/Footer.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import trace:
  Server Component:
    ./src/Components/Footer/Footer.jsx
    ./src/app/layout.js
[00:00:09.866] Browser ERROR   ./src/Components/Header/Header.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import trace:
  Server Component:
    ./src/Components/Header/Header.jsx
    ./src/app/layout.js
[00:00:09.866] Browser ERROR   ./src/Components/Hero/Hero.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Hero/Hero.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Hero/Hero.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.866] Browser ERROR   ./src/Components/Services/Services.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Services/Services.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Services/Services.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.866] Browser ERROR   ./src/Components/Work/Work.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Work/Work.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Work/Work.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.866] Browser ERROR   ./src/Components/context/ThemeToggle.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/context/ThemeToggle.jsx [Client Component Browser]
    ./src/Components/Header/Header.jsx [Client Component Browser]
    ./src/Components/Header/Header.jsx [Server Component]
    ./src/app/layout.js [Server Component]

  Client Component SSR:
    ./src/Components/context/ThemeToggle.jsx [Client Component SSR]
    ./src/Components/Header/Header.jsx [Client Component SSR]
    ./src/Components/Header/Header.jsx [Server Component]
    ./src/app/layout.js [Server Component]
[00:00:09.866] Browser ERROR   ./src/Components/hooks/useLenis.js
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/hooks/useLenis.js [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/hooks/useLenis.js [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.866] Browser ERROR   ./src/Components/variants.js
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/variants.js [Client Component Browser]
    ./src/Components/Counter/Counter.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/variants.js [Client Component SSR]
    ./src/Components/Counter/Counter.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.866] Browser ERROR   ./src/app/context/ThemeContext.js
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Server Component:
    ./src/app/context/ThemeContext.js
    ./src/app/layout.js

  Client Component Browser:
    ./src/app/context/ThemeContext.js [Client Component Browser]
    ./src/Components/Counter/Counter.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/app/context/ThemeContext.js [Client Component SSR]
    ./src/Components/Counter/Counter.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.866] Browser ERROR   ./src/app/layout.js
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.
[00:00:09.867] Browser ERROR   ./src/app/page.js
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.867] Browser ERROR   ./src/Components/About/About.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/About/About.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/About/About.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.867] Browser ERROR   ./src/Components/Certificate/Certificate.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Certificate/Certificate.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Certificate/Certificate.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.867] Browser ERROR   ./src/Components/Contact/Contact.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Contact/Contact.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Contact/Contact.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.867] Browser ERROR   ./src/Components/Counter/Counter.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Counter/Counter.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Counter/Counter.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.867] Browser ERROR   ./src/Components/Counter/Increment.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Counter/Increment.jsx [Client Component Browser]
    ./src/Components/Counter/Counter.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Counter/Increment.jsx [Client Component SSR]
    ./src/Components/Counter/Counter.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.867] Browser ERROR   ./src/Components/Education/Education.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Education/Education.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Education/Education.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.867] Browser ERROR   ./src/Components/Footer/Footer.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import trace:
  Server Component:
    ./src/Components/Footer/Footer.jsx
    ./src/app/layout.js
[00:00:09.867] Browser ERROR   ./src/Components/Header/Header.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import trace:
  Server Component:
    ./src/Components/Header/Header.jsx
    ./src/app/layout.js
[00:00:09.867] Browser ERROR   ./src/Components/Hero/Hero.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Hero/Hero.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Hero/Hero.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.867] Browser ERROR   ./src/Components/Services/Services.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Services/Services.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Services/Services.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.867] Browser ERROR   ./src/Components/Work/Work.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/Work/Work.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/Work/Work.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.867] Browser ERROR   ./src/Components/context/ThemeToggle.jsx
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/context/ThemeToggle.jsx [Client Component Browser]
    ./src/Components/Header/Header.jsx [Client Component Browser]
    ./src/Components/Header/Header.jsx [Server Component]
    ./src/app/layout.js [Server Component]

  Client Component SSR:
    ./src/Components/context/ThemeToggle.jsx [Client Component SSR]
    ./src/Components/Header/Header.jsx [Client Component SSR]
    ./src/Components/Header/Header.jsx [Server Component]
    ./src/app/layout.js [Server Component]
[00:00:09.867] Browser ERROR   ./src/Components/hooks/useLenis.js
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/hooks/useLenis.js [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/hooks/useLenis.js [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.867] Browser ERROR   ./src/Components/variants.js
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/Components/variants.js [Client Component Browser]
    ./src/Components/Counter/Counter.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/Components/variants.js [Client Component SSR]
    ./src/Components/Counter/Counter.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.867] Browser ERROR   ./src/app/context/ThemeContext.js
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Server Component:
    ./src/app/context/ThemeContext.js
    ./src/app/layout.js

  Client Component Browser:
    ./src/app/context/ThemeContext.js [Client Component Browser]
    ./src/Components/Counter/Counter.jsx [Client Component Browser]
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/app/context/ThemeContext.js [Client Component SSR]
    ./src/Components/Counter/Counter.jsx [Client Component SSR]
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:09.867] Browser ERROR   ./src/app/layout.js
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.
[00:00:09.867] Browser ERROR   ./src/app/page.js
Specified module format (CommonJs) is not matching the module format of the source code (EcmaScript Modules)
The CommonJs module format was specified in the package.json that is affecting this source file or by using an special extension, but Ecmascript import/export syntax is used in the source code.
The module was automatically converted to an EcmaScript module, but that is in conflict with the specified module format. Either change the "type" field in the package.json or replace EcmaScript import/export syntax with CommonJs syntas in the source file.
In some cases EcmaScript import/export syntax is added by an transform and isn't actually part of the source code. In these cases revisit transformation options to inject the correct syntax.

Import traces:
  Client Component Browser:
    ./src/app/page.js [Client Component Browser]
    ./src/app/page.js [Server Component]

  Client Component SSR:
    ./src/app/page.js [Client Component SSR]
    ./src/app/page.js [Server Component]
[00:00:44.388] Server  LOG      ✓ Compiled in 68ms
[00:03:00.700] Server  LOG      ✓ Compiled in 50ms
[00:03:33.826] Server  LOG      ✓ Compiled in 90ms
[00:03:35.029] Server  LOG      ✓ Compiled in 34ms
[00:13:38.777] Server  LOG      ✓ Compiled in 19ms
[00:17:34.943] Server  LOG      ✓ Compiled in 32ms
